%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: e9620f8c34305754d8cc9a7e49e852d9, type: 3}
  m_Name: StageDescription_en-US
  m_EditorClassIdentifier: 
  m_LocaleId:
    m_Code: en-US
  m_SharedData: {fileID: 11400000, guid: 1074a1db554363f469a510b17b20e9b7, type: 2}
  m_Metadata:
    m_Items: []
  m_TableData:
  - m_Id: 5434196641046531
    m_Localized: 'Access Denied





      You do not have the required permissions
      to access this CCTV.'
    m_Metadata:
      m_Items: []
  - m_Id: 8883291166728192
    m_Localized: Move a laborer from the entrance to the exit. Laborers will follow
      the platforms you place. Ensure that they do not stray beyond the map boundaries.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865562
    m_Localized: Command to move
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865563
    m_Localized: Group control
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865564
    m_Localized: Add 1
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865565
    m_Localized: Fill the gaps
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865566
    m_Localized: Add 1 alternately
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059840
    m_Localized: Laborers duplication
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059841
    m_Localized: First and last
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059842
    m_Localized: Line up one by one
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059843
    m_Localized: Eliminate even numbers
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059844
    m_Localized: Eliminate odd numbers
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059845
    m_Localized: Pair up
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865536
    m_Localized: A single laborer alone is incapable of accomplishing any task. Effective
      management of multiple workers is required. Begin by safely guiding several
      workers to the exit.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865537
    m_Localized: Pressing the green + button increases the value by 1. Ensure that
      1 is added equally to all.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865538
    m_Localized: Some laborers have died during operation. Generate and deploy replacement
      personnel as quickly as possible.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865539
    m_Localized: Rewarding only certain laborers can efficiently enhance productivity.
      The sense of competition will contribute to maximizing performance.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865540
    m_Localized: Laborers can be infinitely duplicated, but duplication must be limited
      to the specified number. Handling them is also part of the job.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865541
    m_Localized: The first and last always hold significant roles. The one at the
      front leads the group, while the one at the back must protect everyone.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865542
    m_Localized: Arrange the workers in an orderly manner. A disorganized structure
      may incite rebellion among them.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865543
    m_Localized: Sometimes, punishing workers can enhance productivity. Is there
      anyone you have found undesirable?
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865544
    m_Localized: Proceed in the opposite manner this time.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865545
    m_Localized: At times, a single skilled worker is more valuable than two laborers.
      Pair them up and have them meet accordingly.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865546
    m_Localized: Sometimes, a single skilled worker is more needed than three laborers.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865547
    m_Localized: Correct the incorrect order. Pair them in threes and arrange them
      in the proper sequence.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865548
    m_Localized: Apply the Fibonacci sequence to the laborers. The Fibonacci sequence
      is defined by each number being the sum of the two preceding ones.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865549
    m_Localized: This is an order from higher-ups. Minimize wasted time. All resources,
      including time, must be managed efficiently.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865550
    m_Localized: Eliminate the worthless laborers. All of this is a measure to maximize
      the efficiency of the organization.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059846
    m_Localized: Merge 3 numbers
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059847
    m_Localized: Restore disrupted order
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059848
    m_Localized: Fibonacci
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059849
    m_Localized: Raise the pace
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059850
    m_Localized: Remove the worthless
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059855
    m_Localized: Find a bigger one
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059851
    m_Localized: Even the worthless
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059852
    m_Localized: Sort the cases
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059853
    m_Localized: Sub
    m_Metadata:
      m_Items: []
  - m_Id: 8883291217059854
    m_Localized: NxM
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865551
    m_Localized: Produce the zeros; the higher-ups have determined that they have
      a use for them.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865552
    m_Localized: You need to sort the cases. If a 0 appears, add 1 to the numbers
      that have appeared. If a 1 appears, subtract 1 from the numbers that have appeared.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865553
    m_Localized: Subtract the number of laborers from each other.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865554
    m_Localized: Multiply the number of laborers from each other.
    m_Metadata:
      m_Items: []
  - m_Id: 8883291212865555
    m_Localized: Find the worker with the larger number and classify.
    m_Metadata:
      m_Items: []
  references:
    version: 2
    RefIds: []
